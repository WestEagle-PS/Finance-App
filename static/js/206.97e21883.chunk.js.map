{"version":3,"file":"static/js/206.97e21883.chunk.js","mappings":"2OACA,EAAyB,2B,UCMzB,EAJkB,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,MAC/B,OAAO,2BAAQC,UAAWC,EAAeC,QAASJ,GAAgBC,GACnE,E,4BCJD,GAAgB,QAAU,+BAA+B,OAAS,8BAA8B,QAAU,+BAA+B,OAAS,8BAA8B,MAAQ,8BC+BxL,EA5BqB,SAAC,GAA6B,IAA3BI,EAA0B,EAA1BA,WAAYD,EAAc,EAAdA,QAClC,GAA8BE,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAeF,EAAO,UAAMJ,EAAAA,OAAN,YAAuBA,EAAAA,SAAmBA,EAAAA,OAEtE,OACE,gBAAKD,UAAWC,EAAAA,QAAhB,UACE,mBAAOD,UAAWO,EAAlB,WACE,kBACEP,UAAWC,EAAAA,SACXO,KAAK,WACLH,QAASA,EACTI,SAAU,WAER,GADAN,EAAWE,GACPA,EAGF,OAFAH,EAAQ,CAAEM,KAAM,OAAQE,KAAM,gBAC9BJ,GAAW,SAAAK,GAAS,OAAKA,CAAL,IAGtBT,EAAQ,CAAEM,KAAM,OAAQE,KAAM,YAC9BJ,GAAW,SAAAK,GAAS,OAAKA,CAAL,GACrB,KAEH,iBAAMX,UAAWC,EAAAA,OAAgB,IAAMA,EAAAA,YAI9C,E,oBC6DD,EAtFiB,SAAC,GAAgC,IAAD,IAA7BW,QAAAA,OAA6B,MAAnB,GAAmB,EAAfH,EAAe,EAAfA,SAChC,GAA0BL,EAAAA,EAAAA,UAAS,MAAnC,eAAOS,EAAP,KAAcC,EAAd,KAEA,OACE,SAAC,KAAD,CACEF,QAASA,EACTG,WAAY,CAAEC,kBAAAA,EAAAA,GACdH,MAAOA,EACPI,YAAY,oBACZR,SAAU,SAAAI,GACRC,EAASD,GACTJ,EAAS,CAAED,KAAM,WAAYE,KAAMG,EAAMA,OAC1C,EACDZ,OAAQ,CACNgB,YAAa,SAAAC,GAAU,yBAClBA,GADkB,IAErBC,WAAY,eACZC,MAAO,UACPC,SAAU,OACVC,WAAY,iBALS,EAOvBC,QAAS,SAAAL,GAAU,yBACdA,GADc,IAEjBM,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,aAAc,oBACdC,OAAQ,UACRC,gBAAiB,cACjB,UAAW,KACXC,UAAW,QATM,EAWnBC,mBAAoB,iBAAO,CACzBC,QAAS,OADS,EAGpBC,kBAAmB,SAACf,EAAYgB,GAAb,eAAC,UACfhB,GADc,IAEjBiB,UAAWD,EAAME,UAAY,iBAAmB,GAChDC,WAAY,mBAHK,EAKnBC,YAAa,SAAApB,GAAU,yBAClBA,GADkB,IAErBC,WAAY,eACZC,MAAO,UACPC,SAAU,OACVC,WAAY,iBALS,EAOvBiB,KAAM,SAAAC,GAAI,yBACLA,GADK,IAERC,OAAQ,EACRjB,MAAO,OACPkB,QAAS,SACTb,gBAAiB,2BACjBC,UAAW,kCACXa,eAAgB,aAChBC,aAAc,OACdC,SAAU,UATF,EAWVC,OAAQ,SAACC,EAAGb,GAAJ,MAAe,CACrBc,WAAY,MACZC,cAAe,MACfC,YAAa,OACb/B,WAAY,eACZE,SAAU,OACVC,WAAY,gBACZU,QAAS,OACTmB,WAAY,SACZvB,OAAQ,UACR,SAAU,CACRC,gBAAiBK,EAAMkB,WAAa,GAAK,QACzChC,MAAO,WAETA,MAAOc,EAAMkB,WAAa,UAAY,UAdhC,EAgBRC,SAAU,SAAAb,GAAI,yBACTA,GADS,IAEZ,sBAAuB,CACrBhB,MAAO,MACPC,OAAQ,QAJE,IAUrB,E,6BCzFY6B,EAAe,SAACzC,GACzB,IAAI0C,EAAQ1C,EACN2C,EACJD,EAAME,UAAY,GACdF,EAAME,UAAUC,WAAWC,SAAS,EAAG,GACvCJ,EAAME,UACNG,EACJL,EAAMM,WAAa,IACdN,EAAMM,WAAa,GAAGH,WAAWC,SAAS,EAAG,GAC9CJ,EAAMM,WAAa,EACnBC,EAAOP,EAAMQ,cAEnB,MADa,UAAMD,EAAN,YAAcF,EAAd,YAAuBJ,EAErC,EC0BH,IACA,EAAe,IAA0B,8DCvCzC,G,QAAwB,yBAAxB,EAAuF,2BAAvF,EAAyH,uBCoCzH,EA3B+B,SAAC,GAA6B,IAA3BQ,EAA0B,EAA1BA,UAAWvD,EAAe,EAAfA,SAC3C,GAAkCL,EAAAA,EAAAA,UAAS,IAAI6D,KAAKD,IAApD,eAAOE,EAAP,KAAkBC,EAAlB,KAEMC,GAAcC,EAAAA,EAAAA,aAAW,WAAqBC,GAArB,IAAGzD,EAAH,EAAGA,MAAOX,EAAV,EAAUA,QAAV,OAC7B,iBAAKF,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAasE,IAAKC,EAAcC,IAAI,mBACpD,mBAAQzE,UAAWC,EAAcO,KAAK,SAASN,QAASA,EAASoE,IAAKA,EAAtE,SACGzD,MAJwB,IAS/B,OACE,SAAC,IAAD,CACE6D,UAAQ,EACRC,SAAUT,EACVzD,SAAU,SAAA+C,GACRW,EAAaX,GACb/C,EAAS,CAAED,KAAM,OAAQE,KAAM4C,EAAaE,IAC7C,EACDoB,aAAa,SAACR,EAAD,IACbS,WAAW,aACXC,SAASC,EAAAA,EAAAA,SAAQ,IAAId,KAAQ,IAGlC,E,mBClCD,EAAyB,iC,4BCUzB,EARwB,SAAC,GAAwC,IAAtCe,EAAqC,EAArCA,SAAUlF,EAA2B,EAA3BA,WAAeC,GAAY,YAC9D,OACE,mCAAQC,UAAWC,EAAeC,QAASJ,GAAgBC,GAA3D,aACGiF,IAGN,ECCD,EARsB,CACpBC,gBAAiB3B,EAAa,IAAIW,MAClCzD,KAAM,SACN0E,WAAY,uCACZC,QAAS,GACTC,OAAQ,ICNV,EAAwB,oCAAxB,EAAmE,mCAAnE,EAA8G,oCAA9G,EAA4J,sCAA5J,EAAwM,kCAAxM,EAAiP,mCAAjP,EAA6R,qCAA7R,EAA4U,sCAA5U,EAA6X,uCAA7X,EAA2a,mCCuF3a,EA1E2B,SAAC,GAAyF,IAAD,IAAtFC,aAAAA,OAAsF,MAAvEC,EAAuE,MAAxDC,OAAAA,OAAwD,SAAxCC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAClG,GAA8BtF,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAgEqF,EAAAA,EAAAA,GAAQ,CAAEN,aAAAA,EAAcG,SAAAA,IAAhFtD,EAAR,EAAQA,MAAO0D,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,iBAAkBC,EAA/C,EAA+CA,aAEzCC,GADaC,EAAAA,EAAAA,IAAYC,EAAAA,IACOC,QAAO,SAAAC,GAAI,MAAkB,WAAdA,EAAKC,IAAT,IAC3CxF,EAAUmF,EAAmBM,KAAI,gBAAGC,EAAH,EAAGA,GAAH,MAAmB,CAAEC,MAArB,EAAOH,KAA2BvF,MAAOyF,EAAzC,IAC/BrB,EAAuD/C,EAAvD+C,gBAAiBzE,EAAsC0B,EAAtC1B,KAAM2E,EAAgCjD,EAAhCiD,QAASC,EAAuBlD,EAAvBkD,OAAQF,EAAehD,EAAfgD,WAC1CsB,EAAeT,EAAmBU,MAAK,SAAAN,GAAI,OAAIA,EAAKG,KAAOpB,CAAhB,IAC3CwB,EAAkB,WAATlG,EAAoBP,EAAgBA,EAC7C0G,EAAmB,YAATnG,EAAqBP,EAAiBA,EAUtD,OACE,iCACE,cAAGD,UAAWC,EAAd,SAA6ByF,GAAa,qBAC1C,kBAAMF,SAAUM,EAAc9F,UAAWC,EAAzC,UACGsF,GACC,iCACE,eAAGvF,UAAWC,EAAd,WACE,iBAAMD,UAAW0G,EAAjB,oBADF,OAC2C,iBAAM1G,UAAW2G,EAAjB,wBAEjC,YAATnG,IACC,kBAAOR,UAAWC,EAAcmG,KAAK,aAAa5F,KAAK,OAAOK,MAAO2F,EAAaJ,KAAMQ,UAAQ,QAIpG,iCACE,SAAC,EAAD,CAAczG,WAvBF,SAAAO,GACpBJ,EAAWI,EACZ,EAqBkDR,QAAS2F,KAChDxF,IAAW,SAAC,EAAD,CAAUO,QAASA,EAASH,SAAUoF,QAGvD,iBAAK7F,UAAWC,EAAhB,WACE,kBACED,UAAWC,EACXmG,KAAK,SACL5F,KAAK,OACLK,MAAOuE,EACPnE,YAAY,OACZ4F,UAAQ,EACRpG,SAAUmF,IAEXL,GACC,iBAAKvF,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAasE,IAAKC,EAAcC,IAAI,mBACpD,kBAAOzE,UAAWC,EAAcmG,KAAK,kBAAkB5F,KAAK,OAAOK,MAAOoE,EAAiB2B,UAAQ,QAGrG,SAAC,EAAD,CAAwB5C,UAAWiB,EAAiBxE,SAAUoF,QAGlE,kBACE7F,UAAWC,EACXmG,KAAK,UACL5F,KAAK,OACLK,MAAOsE,EACPlE,YAAY,UACZR,SAAUmF,KAEZ,iBAAK5F,UAAWC,EAAhB,WACE,SAAC6G,EAAA,EAAD,UAAgBvB,EAAS,OAAS,SAClC,SAAC,EAAD,CAAiBzF,WApDI,WAC3B2F,GAAa,EACd,EAkDO,4BAKT,ECrFD,EAA0B,2B,UCA1B,EAAyB,4BAAzB,EAA6D,2BCe7D,EAbmB,SAAC,GAAqB,IAAnBa,EAAkB,EAAlBA,GAAIpG,EAAc,EAAdA,QACxB,OACE,mBACEF,UAAWC,EACXC,QAAS,WACPA,EAAQoG,EACT,EAJH,UAME,iBAAMtG,UAAWC,EAAjB,mBAGL,ECbD,EAAyB,8BCezB,EAbqB,SAAC,GAAqB,IAAnBqG,EAAkB,EAAlBA,GAAIpG,EAAc,EAAdA,QAC1B,OACE,mBACEF,UAAWC,EACXC,QAAS,SAAA6G,GACP7G,EAAQoG,EACT,EAJH,mBASH,ECbD,EAAuB,mCAAvB,EAAoE,sCAApE,GAAqH,uCAArH,GAA8M,sCAA9M,GAA0P,kCAA1P,GAAmS,mCAAnS,GAAiV,uCAAjV,GAA+X,mCAA/X,GAA6a,uCAA7a,GAA6d,qCCsD7d,GA7B6B,SAAC,GAAkF,IAAhFA,EAA+E,EAA/EA,GAAIU,EAA2E,EAA3EA,SAAUC,EAAiE,EAAjEA,IAAKzD,EAA4D,EAA5DA,KAAMhD,EAAsD,EAAtDA,KAAM2E,EAAgD,EAAhDA,QAAS+B,EAAuC,EAAvCA,eAAgBC,EAAuB,EAAvBA,iBAChFC,EAASH,EAAII,QAAQ,GACrBC,EAAuB,WAAT9G,EAAoB,IAAM,IACxC+G,EAAU,IAAItD,KAAKT,GACnBgE,EAAMD,EAAQ9D,UAAUC,WAAWC,SAAS,EAAG,KAC/CC,GAAS2D,EAAQ1D,WAAa,GAAGH,WAAWC,SAAS,EAAG,KACxDG,EAAOyD,EAAQxD,cAAcL,WAAW+D,OAAO,GAC/CC,EAAa,UAAMF,EAAN,YAAa5D,EAAb,YAAsBE,GACzC,OACE,gBAAI9D,UAAWC,EAAf,WACE,iBAAKD,UAAWC,EAAhB,WACE,0BAAK,cAAGD,UAAWC,GAAd,SAA4ByH,OACjC,0BAAK,cAAG1H,UAAWC,GAAd,SAA4BqH,OAClC,gCAAM,eAAGtH,UAAWC,GAAd,cAAyC,OAAR+G,QAAQ,IAARA,GAAAA,EAAUZ,KAAOY,EAASZ,KAAO,iBAEvE,0BAAK,cAAGpG,UAAWC,GAAd,SAA+BkF,UAGtC,gBAAKnF,UAAWC,GAAhB,UACE,iBAAMD,UAA2B,MAAhBsH,EAAsBrH,GAAkBA,GAAzD,SAAyEmH,OAE3E,iBAAKpH,UAAWC,GAAhB,WACE,SAAC,EAAD,CAAYC,QAAS,kBAAMgH,EAAeZ,EAArB,KACrB,SAAC,EAAD,CAAcpG,QAAS,kBAAMiH,EAAiBb,EAAvB,SAI9B,E,WCpDD,IAAgB,MAAQ,gCAAgC,IAAM,8BAA8B,UAAY,oCAAoC,UAAY,qC,WCwHxJ,I,QA5GyB,WACvB,OAA4BlG,EAAAA,EAAAA,WAAS,GAArC,eAAOmF,EAAP,KAAeoC,EAAf,KACA,GAAsCvH,EAAAA,EAAAA,UAAS,CAAC,GAAhD,eAAOwH,EAAP,KAAoBC,EAApB,KACA,GAAkCzH,EAAAA,EAAAA,UAAS,MAA3C,eAAO0H,EAAP,KAAkBC,EAAlB,KACA,GAAkC3H,EAAAA,EAAAA,WAAS,GAA3C,eAAO4H,EAAP,KAAkBvC,EAAlB,KAEMwC,GAAWC,EAAAA,EAAAA,MACXC,GAAenC,EAAAA,EAAAA,IAAYoC,EAAAA,IAC3BC,GAAarC,EAAAA,EAAAA,IAAYC,EAAAA,IAEzBqC,EAAqB,SAAAhC,GACzBqB,GAAU,GACV,IAAMC,EAAcO,GAAgBA,EAAa1B,MAAK,SAAAN,GAAI,OAAIA,EAAKG,KAAOA,CAAhB,IAC1DyB,EAAaH,EAAYxC,SACV,OAAXwC,QAAW,IAAXA,OAAA,EAAAA,EAAaxC,QAAS,EACxByC,GAAe,WACbA,GAAe,kBAAKD,GAAN,IAAmBxC,QAA8B,EAAtBwC,EAAYxC,SACtD,IAEDyC,EAAeD,GAEjBnC,GAAa,EACd,EAEK8C,EAAuB,SAAAjC,GAC3B,IAAM5F,EAAOyH,EAAa1B,MAAK,SAAAN,GAAI,OAAIA,EAAKG,KAAOA,CAAhB,IACnC2B,GAASO,EAAAA,EAAAA,IAAkB9H,GAC5B,EAWK+H,GAAgB,OAAON,GAE7BM,EAAiBC,MAAK,SAACC,EAAGC,GACxB,IAAMC,EAAQ,IAAI5E,KAAK0E,EAAE1D,iBAEzB,OADc,IAAIhB,KAAK2E,EAAE3D,iBACZ6D,UAAYD,EAAMC,SAChC,IAED,IAAMC,EACJN,GACAA,EAAiBpC,KAAI,YAAiE,IAA9DC,EAA6D,EAA7DA,GAAIrB,EAAyD,EAAzDA,gBAAiBzE,EAAwC,EAAxCA,KAAM0E,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAChEoB,EAAe6B,GAAcA,EAAW5B,MAAK,SAAAN,GAAI,OAAIA,EAAKG,KAAOpB,CAAhB,IAIvD,OAHIE,GAAUA,EAAS,IACrBA,IAAmB,IAGnB,SAAC,GAAD,CAEEkB,GAAIA,EACJU,SAAUR,EACVS,IAAK7B,EACL5B,KAAMyB,EACNzE,KAAMA,EACN2E,QAASA,EACT+B,eAAgBoB,EAChBnB,iBAAkBoB,GARbjC,EAWV,IAEG0C,EACwB,IAA5BP,EAAiBQ,QACf,iBAAKjJ,UAAWC,GAAAA,YAAhB,WACE,cAAGD,UAAWC,GAAAA,UAAd,kCACA,cAAGD,UAAWC,GAAAA,UAAd,gGAGA,gBAAKsE,IAAK2E,GAAQzE,IAAI,iBAAiBzE,UAAWC,GAAAA,UAGpD,4BACE,iBAAKD,UAAWC,GAAAA,MAAhB,WACE,iCACA,iCACA,qCACA,oCACA,mCAEF,UAAC,KAAD,CAAWkJ,MAAO,CAAEC,UAAW,KAA/B,UACG,KACD,iBAAKpJ,UAAWC,GAAAA,SAAhB,WACE,eAAID,UAAWC,GAAAA,KAAf,SAA6B8I,IAC5Bf,IACC,SAACqB,EAAA,EAAD,CAAOC,QA9DE,WACnB7D,GAAa,EACd,EA4DW,UACE,SAAC,EAAD,CACEC,UAAU,mBACVL,aAAcuC,EACdrC,OAAQA,EACRC,SA/DQ,SAAA9E,GACtB,IAAMG,GAAK,kBAAQH,GAAR,IAAcoH,UAAAA,IACzBG,GAASsB,EAAAA,EAAAA,IAAkB1I,IAC3B4E,GAAa,EACd,EA4DeA,aAAcA,eAQ9B,OAAO,oCAAIuD,IACZ,GCtHD,GAAsB,wCAAtB,GAAsE,0CAAtE,GAAwH,0CAAxH,GAAyK,yCAAzK,GAAyN,yCAAzN,GAA0Q,0CAA1Q,GAA0T,wCAA1T,GAA6W,6CAA7W,GAAma,2CAAna,GAAwgB,4CCwDxgB,GAlDmC,SAAC,GAAkF,IAAhF1C,EAA+E,EAA/EA,GAAIU,EAA2E,EAA3EA,SAAUC,EAAiE,EAAjEA,IAAKzD,EAA4D,EAA5DA,KAAMhD,EAAsD,EAAtDA,KAAM2E,EAAgD,EAAhDA,QAAS+B,EAAuC,EAAvCA,eAAgBC,EAAuB,EAAvBA,iBACtFC,EAASH,EAAII,QAAQ,GACrBE,EAAU,IAAItD,KAAKT,GACrBgE,EAAMD,EAAQ9D,UAAUC,WAAWC,SAAS,EAAG,KAC/CC,GAAS2D,EAAQ1D,WAAa,GAAGH,WAAWC,SAAS,EAAG,KACxDG,EAAOyD,EAAQxD,cAAcL,WAAW+D,OAAO,GAC/CC,EAAa,UAAMF,EAAN,YAAa5D,EAAb,YAAsBE,GACjCwD,EAAuB,WAAT9G,EAAoB,IAAM,IAC9C,OACE,gBAAKR,UAAWC,GAAhB,UACE,kBAAOD,UAAWC,GAAlB,UACE,mBAAOD,UAAWC,GAAlB,WACE,gBAAID,UAAyB,MAAdsH,EAAkBrH,GAAaA,GAA9C,WACE,eAAID,UAAWC,GAAf,mBACA,eAAID,UAAWC,GAAf,SAA6ByH,QAE/B,gBAAI1H,UAAyB,MAAdsH,EAAkBrH,GAAaA,GAA9C,WACE,eAAID,UAAWC,GAAf,mBACA,eAAID,UAAWC,GAAf,SAA6BqH,QAE/B,gBAAItH,UAAyB,MAAdsH,EAAkBrH,GAAaA,GAA9C,WACE,eAAID,UAAWC,GAAf,uBACA,eAAID,UAAWC,GAAf,SAAqC,OAAR+G,QAAQ,IAARA,GAAAA,EAAUZ,KAAKY,EAASZ,KAAK,gBAE5D,gBAAIpG,UAAyB,MAAdsH,EAAkBrH,GAAaA,GAA9C,WACE,eAAID,UAAWC,GAAf,sBACA,eAAID,UAAWC,GAAf,SAA6BkF,QAE/B,gBAAInF,UAAyB,MAAdsH,EAAkBrH,GAAaA,GAA9C,WACE,eAAID,UAAWC,GAAf,kBACA,eAAID,UAAyB,MAAdsH,EAAkBrH,GAAgBA,GAAjD,SAAiEmH,QAGnE,gBAAIpH,UAAyB,MAAdsH,EAAkBrH,GAAaA,GAA9C,WACE,eAAID,UAAWC,GAAf,UACK,SAAC,EAAD,CAAcC,QAAS,kBAAMiH,EAAiBb,EAAvB,OAE5B,eAAItG,UAAWC,GAAf,UACE,gBAAKD,UAAWC,GAAhB,UACE,SAAC,EAAD,CAAYC,QAAS,kBAAMgH,EAAeZ,EAArB,iBASpC,EC2BD,GAxE8B,WAC5B,OAA4BlG,EAAAA,EAAAA,WAAS,GAArC,eAAOmF,EAAP,KAAeoC,EAAf,KACA,GAAsCvH,EAAAA,EAAAA,UAAS,IAA/C,eAAOwH,EAAP,KAAoBC,EAApB,KACA,GAAkCzH,EAAAA,EAAAA,WAAS,GAA3C,eAAO4H,EAAP,KAAkBvC,EAAlB,KAEMwC,GAAWC,EAAAA,EAAAA,MACXC,GAAenC,EAAAA,EAAAA,IAAYoC,EAAAA,IAC3BC,GAAarC,EAAAA,EAAAA,IAAYC,EAAAA,IAEzBqC,EAAqB,SAAAhC,GACzBqB,GAAU,GACV,IAAMC,EAAcO,EAAa1B,MAAK,SAAAN,GAAI,OAAIA,EAAKG,KAAOA,CAAhB,IAC1CuB,EAAeD,GACfnC,GAAa,EACd,EAEK8C,EAAuB,SAAAjC,GAC3B2B,GAASO,EAAAA,EAAAA,IAAkBlC,GAC5B,EAWKmC,GAAgB,OAAON,GAE7BM,EAAiBC,MAAK,SAACC,EAAGC,GACxB,IAAMC,EAAQ,IAAI5E,KAAK0E,EAAE1D,iBAEzB,OADc,IAAIhB,KAAK2E,EAAE3D,iBACZ6D,UAAYD,EAAMC,SAChC,IAED,IAAMC,EAAUN,EAAiBpC,KAAI,YAAiE,IAA9DC,EAA6D,EAA7DA,GAAIrB,EAAyD,EAAzDA,gBAAiBzE,EAAwC,EAAxCA,KAAM0E,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAClFoB,EAAe6B,EAAW5B,MAAK,SAAAN,GAAI,OAAIA,EAAKG,KAAOpB,CAAhB,IAEvC,OACE,SAAC,GAAD,CAEEoB,GAAIA,EACJU,SAAUR,EACVS,IAAK7B,EACL5B,KAAMyB,EACNzE,KAAMA,EACN2E,QAASA,EACT+B,eAAgBoB,EAChBnB,iBAAkBoB,GARbjC,EAWV,IAED,OACE,gCACG,IACAyC,EACAf,IACC,SAACqB,EAAA,EAAD,CAAOC,QAxCQ,WACnB7D,GAAa,EACd,EAsCK,UACE,SAAC,EAAD,CACEJ,aAAcuC,EACdrC,OAAQA,EACRC,SAxCc,SAAA9E,GACtBuH,GAASsB,EAAAA,EAAAA,IAAkB7I,IAC3B+E,GAAa,EACd,EAsCSA,aAAcA,MAGjB,MAGR,E,sBC5BD,GAzCiB,WACf,OAAkCrF,EAAAA,EAAAA,WAAS,GAA3C,eAAO4H,EAAP,KAAkBvC,EAAlB,KACMwC,GAAWC,EAAAA,EAAAA,OAEjBsB,EAAAA,EAAAA,YAAU,WACRvB,GAASwB,EAAAA,EAAAA,OACTxB,GAASyB,EAAAA,EAAAA,MACV,GAAE,CAACzB,IAEJ,IAaM0B,GAAWC,EAAAA,GAAAA,GAAc,sBACzBC,GAAWD,EAAAA,GAAAA,GAAc,sBAE/B,OACE,iBAAK5J,UAAW8J,EAAhB,UACGD,IAAY,SAACE,GAAA,EAAD,IAEZJ,IAAY,SAAC,GAAD,CAAkBlE,aAAcA,IAC5CoE,IAAY,SAAC,GAAD,KACb,SAAC,EAAD,CAAWrJ,KAAK,SAASV,WAtBH,WACxB2F,GAAa,EACd,IAqBIuC,IACC,SAACqB,EAAA,EAAD,CAAOC,QApBQ,WACnB7D,GAAa,EACd,EAkBK,UACE,SAAC,EAAD,CAAoBD,SAjBJ,SAAA9E,GACtBuH,GAAS+B,EAAAA,EAAAA,IAAetJ,IACxB+E,GAAa,EACd,EAcsDA,aAAcA,QAKtE,C,yDCtCD,IAV0B,SAAA1F,GACxB,OACE,SAAC,EAAAkK,EAAA,mBAAD,kBAAkClK,GAAlC,cACE,gBAAKyB,MAAM,KAAKC,OAAO,KAAKyI,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAAlE,UACE,iBAAMC,EAAE,kBAAkBC,OAAO,cAIxC,C,8ECVD,EAAyB,+B,yBCUzB,EARsB,SAAC,GAA4B,IAA1BtF,EAAyB,EAAzBA,SAAajF,GAAY,YAChD,OACE,mCAAQC,UAAWC,GAAmBF,GAAtC,aACGiF,IAGN,C,qFCNKW,EAAU,SAAC,GAAgC,IAA9BN,EAA6B,EAA7BA,aAAcG,EAAe,EAAfA,SAC/B,GAA0BpF,EAAAA,EAAAA,WAAS,UAAKiF,IAAxC,eAAOnD,EAAP,KAAcqI,EAAd,KAmCA,MAAO,CAAErI,MAAAA,EAAOqI,SAAAA,EAAU3E,aAjCL,SAAC,GAAgB,IAAd4E,EAAa,EAAbA,OACtBD,GAAS,SAAA5J,GACP,IAAQyF,EAA+BoE,EAA/BpE,KAAMvF,EAAyB2J,EAAzB3J,MAAOR,EAAkBmK,EAAlBnK,QACfoK,EAAoB,aADaD,EAAThK,KACSH,EAAUQ,EAEjD,OAAO,kBAAKF,GAAZ,cAAwByF,EAAOqE,GAChC,GACF,EA0BuC5E,iBAxBf,SAAC,GAAoB,IAAlBrF,EAAiB,EAAjBA,KAAME,EAAW,EAAXA,KACnB,SAATF,GACF+J,GAAS,SAAA5J,GACP,OAAO,kBAAKA,GAAZ,IAAuBsE,gBAAiBvE,GACzC,IAEU,SAATF,GACF+J,GAAS,SAAA5J,GACP,OAAO,kBAAKA,GAAZ,IAAuBH,KAAME,GAC9B,IAEU,aAATF,GACF+J,GAAS,SAAA5J,GACP,OAAO,kBAAKA,GAAZ,IAAuBuE,WAAYxE,GACpC,GAEJ,EAQyDoF,aANrC,SAAAiB,GACnBA,EAAE2D,iBACFlF,GAAS,UAAKtD,IACdqI,GAAS,UAAKlF,GACf,EAGF,EAED,MAEAM,EAAQgF,UAAY,CAClBtF,aAAcuF,IAAAA,OAAAA,WACdpF,SAAUoF,IAAAA,KAAAA,W","sources":["webpack://react-homework-template/./src/shared/components/AddButton/add-button.module.scss?83b9","shared/components/AddButton/AddButton.jsx","webpack://react-homework-template/./src/shared/components/ToggleButton/toggle-button.module.scss?477c","shared/components/ToggleButton/ToggleButton.jsx","shared/components/Dropdown/Dropdown.jsx","shared/utils/toDateString.js","images/svg/calendary.svg","webpack://react-homework-template/./src/shared/components/Calendar/calendar.module.scss?5535","shared/components/Calendar/Calendar.jsx","webpack://react-homework-template/./src/shared/components/SecondaryButton/secondary-button.module.scss?9675","shared/components/SecondaryButton/SecondaryButton.jsx","components/AddTransactionForm/initialState.js","webpack://react-homework-template/./src/components/AddTransactionForm/add-transaction-form.module.scss?a690","components/AddTransactionForm/AddTransactionForm.jsx","webpack://react-homework-template/./src/pages/HomePage/home-page.module.scss?a2f2","webpack://react-homework-template/./src/shared/components/EditButton/edit-button.module.scss?a1a3","shared/components/EditButton/EditButton.jsx","webpack://react-homework-template/./src/shared/components/DeleteButton/delete-button.module.scss?056c","shared/components/DeleteButton/DeleteButton.jsx","webpack://react-homework-template/./src/components/TransactionsList/TransactionsListItem/TransactionsListItem.module.scss?11fb","components/TransactionsList/TransactionsListItem/TransactionsListItem.jsx","webpack://react-homework-template/./src/components/TransactionsList/TransactionsList.module.scss?b6f0","components/TransactionsList/TransactionsList.jsx","webpack://react-homework-template/./src/components/TransactionsListMobile/TransactionsListMobileItem/TransactionsListMobileItem.module.scss?c47e","components/TransactionsListMobile/TransactionsListMobileItem/TransactionsListMobileItem.jsx","components/TransactionsListMobile/TransactionsListMobile.jsx","pages/HomePage/HomePage.jsx","shared/components/DropdownIndicator/DropdownIndicator.jsx","webpack://react-homework-template/./src/shared/components/PrimaryButton/primary-button.module.scss?14d5","shared/components/PrimaryButton/PrimaryButton.jsx","shared/hooks/useForm.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"add-button_button__eKi4A\"};","import PropTypes from 'prop-types';\nimport styles from './add-button.module.scss';\n\nconst AddButton = ({ onBtnClick, props }) => {\n  return <button className={styles.button} onClick={onBtnClick} {...props}></button>;\n};\n\nexport default AddButton;\n\nAddButton.propTypes = {\n  onBtnClick: PropTypes.func.isRequired,\n  props: PropTypes.object,\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"toggle-button_wrapper__gTPXH\",\"switch\":\"toggle-button_switch__fUAC9\",\"checked\":\"toggle-button_checked__0nEhj\",\"slider\":\"toggle-button_slider__m+yY+\",\"round\":\"toggle-button_round__B7MoG\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport styles from './toggle-button.module.scss';\n\nconst ToggleButton = ({ getChecked, onClick }) => {\n  const [checked, setChecked] = useState(false);\n  const labelClasses = checked ? `${styles.switch} ${styles.checked}` : styles.switch;\n\n  return (\n    <div className={styles.wrapper}>\n      <label className={labelClasses}>\n        <input\n          className={styles.checkbox}\n          type=\"checkbox\"\n          checked={checked}\n          onChange={() => {\n            getChecked(checked);\n            if (checked) {\n              onClick({ type: 'type', data: 'INCOME' });\n              setChecked(prevState => !prevState);\n              return;\n            }\n            onClick({ type: 'type', data: 'EXPENSE' });\n            setChecked(prevState => !prevState);\n          }}\n        />\n        <span className={styles.slider + ' ' + styles.round}></span>\n      </label>\n    </div>\n  );\n};\n\nexport default ToggleButton;\n\nToggleButton.propTypes = {\n  getChecked: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n}","import PropTypes from 'prop-types';\nimport Select from 'react-select';\nimport { useState } from 'react';\nimport DropdownIndicator from '../DropdownIndicator/DropdownIndicator';\n\nconst Dropdown = ({ options = [], onChange }) => {\n  const [value, setValue] = useState(null);\n\n  return (\n    <Select\n      options={options}\n      components={{ DropdownIndicator }}\n      value={value}\n      placeholder=\"Select a category\"\n      onChange={value => {\n        setValue(value);\n        onChange({ type: 'category', data: value.value });\n      }}\n      styles={{\n        placeholder: baseStyles => ({\n          ...baseStyles,\n          fontFamily: 'CirceRegular',\n          color: '#BDBDBD',\n          fontSize: '18px',\n          lineHeight: 'calc(27 / 18)',\n        }),\n        control: baseStyles => ({\n          ...baseStyles,\n          width: '100%',\n          height: '32px',\n          border: 'none',\n          borderBottom: '1px solid #E0E0E0',\n          cursor: 'pointer',\n          backgroundColor: 'transparent',\n          '&:hover': null,\n          boxShadow: 'none',\n        }),\n        indicatorSeparator: () => ({\n          display: 'none',\n        }),\n        dropdownIndicator: (baseStyles, state) => ({\n          ...baseStyles,\n          transform: state.isFocused ? 'rotate(180deg)' : '',\n          transition: 'transform 400ms',\n        }),\n        singleValue: baseStyles => ({\n          ...baseStyles,\n          fontFamily: 'CirceRegular',\n          color: '#000000',\n          fontSize: '18px',\n          lineHeight: 'calc(27 / 18)',\n        }),\n        menu: base => ({\n          ...base,\n          margin: 0,\n          width: '100%',\n          padding: '12px 0',\n          backgroundColor: 'rgba(255, 255, 255, 0.7)',\n          boxShadow: '0px 6px 15px rgba(0, 0, 0, 0.1)',\n          backdropFilter: 'blur(25px)',\n          borderRadius: '20px',\n          overflow: 'hidden',\n        }),\n        option: (_, state) => ({\n          paddingTop: '8px',\n          paddingBottom: '8px',\n          paddingLeft: '20px',\n          fontFamily: 'CirceRegular',\n          fontSize: '18px',\n          lineHeight: 'calc(27 / 18)',\n          display: 'flex',\n          alignItems: 'center',\n          cursor: 'pointer',\n          ':hover': {\n            backgroundColor: state.isSelected ? '' : 'white',\n            color: '#FF6596',\n          },\n          color: state.isSelected ? '#FF6596' : '#000000',\n        }),\n        menuList: base => ({\n          ...base,\n          '::-webkit-scrollbar': {\n            width: '0px',\n            height: '0px',\n          },\n        }),\n      }}\n    />\n  );\n};\n\nexport default Dropdown;\n\nDropdown.propTypes = {\n  options: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n// Приклад використання\n// const [value, setValue] = useState({ label: 'One', value: 'one' });\n\n// <Dropdown\n//   options={[\n//     { label: 'One', value: 'one' },\n//     { label: 'Two', value: 'two' },\n//     { label: 'Three', value: 'three' },\n//   ]}\n//   value={value}\n//   onChange={setValue}\n// />;\n","export const toDateString = (value) => {\n    let today = value;\n    const date =\n      today.getDate() < 10\n        ? today.getDate().toString().padStart(2, 0)\n        : today.getDate();\n    const month =\n      today.getMonth() < 10\n        ? (today.getMonth() + 1).toString().padStart(2, 0)\n        : today.getMonth() + 1;\n    const year = today.getFullYear();\n    const dateNow = `${year}-${month}-${date}`;\n    return dateNow;\n  }","var _g, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCalendary(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#a)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9 11H7v2h2v-2Zm4 0h-2v2h2v-2Zm4 0h-2v2h2v-2Zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2Zm0 16H5V9h14v11Z\",\n    fill: \"#4A56E2\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"a\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M0 0h24v24H0z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCalendary);\nexport default __webpack_public_path__ + \"static/media/calendary.30bf32a7a4348ede2ce910569aedc915.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"calendar_field__pFy3H\",\"box\":\"calendar_box__gal01\",\"inputBox\":\"calendar_inputBox__MTg5O\",\"icon\":\"calendar_icon__givQr\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { forwardRef } from 'react';\nimport DatePicker from 'react-datepicker';\nimport addDays from 'date-fns/addDays';\nimport { toDateString } from 'shared/utils/toDateString';\nimport calendarIcon from 'images/svg/calendary.svg';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport styles from './calendar.module.scss';\n\nconst AddTransactionCalendar = ({ stateDate, onChange }) => {\n  const [startDate, setStartDate] = useState(new Date(stateDate));\n\n  const CustomInput = forwardRef(({ value, onClick }, ref) => (\n    <div className={styles.inputBox}>\n      <img className={styles.icon} src={calendarIcon} alt=\"Calendar icon\" />\n      <button className={styles.field} type=\"button\" onClick={onClick} ref={ref}>\n        {value}\n      </button>\n    </div>\n  ));\n\n  return (\n    <DatePicker\n      showIcon\n      selected={startDate}\n      onChange={date => {\n        setStartDate(date);\n        onChange({ type: 'date', data: toDateString(date) });\n      }}\n      customInput={<CustomInput />}\n      dateFormat=\"dd.MM.yyyy\"\n      maxDate={addDays(new Date(), 0)}\n    />\n  );\n};\n\nexport default AddTransactionCalendar;\n\nAddTransactionCalendar.propTypes = {\n  stateDate: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"secondary-button_button__pH-kF\"};","import PropTypes from 'prop-types';\nimport styles from './secondary-button.module.scss';\n\nconst SecondaryButton = ({ children, onBtnClick, ...props }) => {\n  return (\n    <button className={styles.button} onClick={onBtnClick} {...props}>\n      {children}\n    </button>\n  );\n};\n\nexport default SecondaryButton;\n\nSecondaryButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onBtnClick: PropTypes.func.isRequired,\n  props: PropTypes.object,\n}\n\n// Приклад використання\n// const handleClick = () => {\n//   console.log('Click');\n// };\n\n// return (\n//   <div className=\"container\">\n//     <SecondaryButton onClick={handleClick}>ADD</SecondaryButton>\n//   </div>\n// );\n","import { toDateString } from \"shared/utils/toDateString\";\n\nconst INITIAL_STATE = {\n  transactionDate: toDateString(new Date()),\n  type: 'INCOME',\n  categoryId: '063f1132-ba5d-42b4-951d-44011ca46262',\n  comment: '',\n  amount: '',\n};\n\nexport default INITIAL_STATE;","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"add-transaction-form_title__SjWKx\",\"form\":\"add-transaction-form_form__LgtGB\",\"field\":\"add-transaction-form_field__TQA7h\",\"wrapper\":\"add-transaction-form_wrapper__5-Fxj\",\"box\":\"add-transaction-form_box__7ENrd\",\"type\":\"add-transaction-form_type__pMFfQ\",\"income\":\"add-transaction-form_income__DJuca\",\"expense\":\"add-transaction-form_expense__F2o6j\",\"inputBox\":\"add-transaction-form_inputBox__alIk5\",\"icon\":\"add-transaction-form_icon__90jgj\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectCategories } from 'redux/transaction/transaction-selectors';\nimport useForm from 'shared/hooks/useForm';\nimport ToggleButton from 'shared/components/ToggleButton/ToggleButton';\nimport Dropdown from 'shared/components/Dropdown/Dropdown';\nimport AddTransactionCalendar from 'shared/components/Calendar/Calendar';\nimport PrimaryButton from 'shared/components/PrimaryButton/PrimaryButton';\nimport SecondaryButton from 'shared/components/SecondaryButton/SecondaryButton';\nimport INITIAL_STATE from './initialState';\nimport calendarIcon from 'images/svg/calendary.svg';\nimport styles from './add-transaction-form.module.scss';\n\nconst AddTransactionForm = ({ initialState = INITIAL_STATE, isEdit = false, onSubmit, setShowModal, titleEdit }) => {\n  const [checked, setChecked] = useState(true);\n  const { state, handleChange, handleDataChange, handleSubmit } = useForm({ initialState, onSubmit });\n  const categories = useSelector(selectCategories);\n  const filteredCategories = categories.filter(item => item.name !== 'Income');\n  const options = filteredCategories.map(({ id, name }) => ({ label: name, value: id }));\n  const { transactionDate, type, comment, amount, categoryId } = state;\n  const categoryName = filteredCategories.find(item => item.id === categoryId);\n  const income = type === 'INCOME' ? styles.income : styles.type;\n  const expense = type === 'EXPENSE' ? styles.expense : styles.type;\n\n  const handleChecked = data => {\n    setChecked(data);\n  };\n\n  const handleCancelBtnClick = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      <p className={styles.title}>{titleEdit || 'Add transaction'}</p>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        {isEdit ? (\n          <>\n            <p className={styles.type}>\n              <span className={income}>Income</span> / <span className={expense}>Expense</span>\n            </p>\n            {type === 'EXPENSE' && (\n              <input className={styles.field} name=\"categoryId\" type=\"text\" value={categoryName.name} disabled />\n            )}\n          </>\n        ) : (\n          <>\n            <ToggleButton getChecked={handleChecked} onClick={handleDataChange} />\n            {!checked && <Dropdown options={options} onChange={handleDataChange} />}\n          </>\n        )}\n        <div className={styles.wrapper}>\n          <input\n            className={styles.field}\n            name=\"amount\"\n            type=\"text\"\n            value={amount}\n            placeholder=\"0.00\"\n            required\n            onChange={handleChange}\n          />\n          {isEdit ? (\n            <div className={styles.inputBox}>\n              <img className={styles.icon} src={calendarIcon} alt=\"Calendar icon\" />\n              <input className={styles.field} name=\"transactionDate\" type=\"text\" value={transactionDate} disabled />\n            </div>\n          ) : (\n            <AddTransactionCalendar stateDate={transactionDate} onChange={handleDataChange} />\n          )}\n        </div>\n        <input\n          className={styles.field}\n          name=\"comment\"\n          type=\"text\"\n          value={comment}\n          placeholder=\"Comment\"\n          onChange={handleChange}\n        />\n        <div className={styles.box}>\n          <PrimaryButton>{isEdit ? 'Save' : 'Add'}</PrimaryButton>\n          <SecondaryButton onBtnClick={handleCancelBtnClick}>Cancel</SecondaryButton>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default AddTransactionForm;\n\nAddTransactionForm.propTypes = {\n  initialState: PropTypes.object,\n  isEdit:PropTypes.bool,\n  onSubmit:PropTypes.func.isRequired,\n  setShowModal: PropTypes.func.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"home-page_wrapper__bK12s\",\"title\":\"home-page_title__RLZyB\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"edit-button_button__Yx4Lp\",\"label\":\"edit-button_label__aO0tA\"};","import PropTypes from 'prop-types';\nimport styles from './edit-button.module.scss';\n\nconst EditButton = ({ id, onClick }) => {\n  return (\n    <button\n      className={styles.button}\n      onClick={() => {\n        onClick(id);\n      }}\n    >\n      <span className={styles.label}>Edit</span>\n    </button>\n  );\n};\n\nexport default EditButton;\n\nEditButton.propTypes = {\n  id: PropTypes.number,\n  onClick: PropTypes.func.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"delete-button_button__NgmWc\"};","import PropTypes from 'prop-types';\nimport styles from './delete-button.module.scss';\n\nconst DeleteButton = ({ id, onClick }) => {\n  return (\n    <button\n      className={styles.button}\n      onClick={e => {\n        onClick(id);\n      }}\n    >\n      Delete\n    </button>\n  );\n};\n\nexport default DeleteButton;\n\nDeleteButton.propTypes = {\n  id: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n}\n\n// Приклад використання\n// const handleDelete = id => {\n//   console.log('Deleted ' + id);\n// };\n\n// <div className=\"container\">\n//   <DeleteButton id={'1'} onClick={handleDelete} />;\n// </div>;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"TransactionsListItem_item__2cJuc\",\"leftBox\":\"TransactionsListItem_leftBox__ce6rj\",\"rightBox\":\"TransactionsListItem_rightBox__9kbcH\",\"svg\":\"TransactionsListItem_svg__LRKGX\",\"comment\":\"TransactionsListItem_comment__TAPk9\",\"sum\":\"TransactionsListItem_sum__5Aw2P\",\"type\":\"TransactionsListItem_type__f-SmD\",\"category\":\"TransactionsListItem_category__koP2G\",\"date\":\"TransactionsListItem_date__Qj-Tk\",\"greenSum\":\"TransactionsListItem_greenSum__Qn1cd\",\"redSum\":\"TransactionsListItem_redSum__PO3vo\"};","import PropTypes from 'prop-types';\nimport EditButton from 'shared/components/EditButton/EditButton';\nimport DeleteButton from 'shared/components/DeleteButton/DeleteButton';\n\nimport styles from './TransactionsListItem.module.scss';\n\n// const TransactionsListItem = ({ category, sum, date, type, comment }) => {\n//   const typeOfTrans = type === 'income' ? '+' : '-';\n//   return (\n//     <tr>\n//       <td>{date}</td>\n//       <td>{typeOfTrans}</td>\n//       <td>{category}</td>\n//       <td className={styles.tdComment}>{comment}</td>\n//       <td>{sum}</td>\n//       <td>\n//         <img src={svg} alt=\"Edit\" className={styles.svg} />\n\n//         <button className={styles.btn}>Delete</button>\n//       </td>\n//     </tr>\n//   );\n// };\n\n// export default TransactionsListItem;\n\nconst TransactionsListItem = ({ id, category, sum, date, type, comment, onEditBtnClick, onDeleteBtnClick }) => {\n  const newSum = sum.toFixed(2);\n  const typeOfTrans = type === 'INCOME' ? '+' : '-';\n  const Newdate = new Date(date);\n  const day = Newdate.getDate().toString().padStart(2, '0');\n  const month = (Newdate.getMonth() + 1).toString().padStart(2, '0');\n  const year = Newdate.getFullYear().toString().slice(-2);\n  const formattedDate = `${day}.${month}.${year}`;\n  return (\n    <li className={styles.item}>\n      <div className={styles.leftBox}>\n        <div><p className={styles.date}>{formattedDate}</p></div>\n        <div><p className={styles.type}>{typeOfTrans}</p></div>\n       <div> <p className={styles.category}> {category?.name ? category.name : 'Unknown'}</p>\n</div>\n        <div><p className={styles.comment}>{comment}</p>\n        </div>\n      </div>\n      <div className={styles.sum}>\n        <span className={typeOfTrans === '+' ? styles.greenSum : styles.redSum}>{newSum}</span>\n      </div>\n      <div className={styles.rightBox}>\n        <EditButton onClick={() => onEditBtnClick(id)} />\n        <DeleteButton onClick={() => onDeleteBtnClick(id)} />\n      </div>\n    </li>\n  );\n};\n\nexport default TransactionsListItem;\n\nTransactionsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  category: PropTypes.object.isRequired,\n  sum: PropTypes.number.isRequired,\n  date: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  comment: PropTypes.string.isRequired,\n  onEditBtnClick: PropTypes.func.isRequired,\n  onDeleteBtnClick: PropTypes.func.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"TransactionsList_title__WxhBO\",\"img\":\"TransactionsList_img__Ao3ri\",\"titleText\":\"TransactionsList_titleText__-LLND\",\"textLover\":\"TransactionsList_textLover__etjZW\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteTransaction, updateTranscation } from 'redux/transaction/transaction-operations';\nimport { selectAllTransactions, selectCategories } from 'redux/transaction/transaction-selectors';\nimport TransactionsListItem from './TransactionsListItem/TransactionsListItem';\nimport Modal from 'shared/components/Modal/Modal';\nimport AddTransactionForm from 'components/AddTransactionForm/AddTransactionForm';\n\nimport wallet from '../../images/wallett.png';\nimport styles from './TransactionsList.module.scss';\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar-react/dist/simplebar.min.css';\n\nconst TransactionsList = () => {\n  const [isEdit, setIsEdit] = useState(false);\n  const [transaction, setTransaction] = useState({});\n  const [oldAmount, setOldAmount] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  const dispatch = useDispatch();\n  const transactions = useSelector(selectAllTransactions);\n  const categories = useSelector(selectCategories);\n\n  const handleEditBtnClick = id => {\n    setIsEdit(true);\n    const transaction = transactions && transactions.find(item => item.id === id);\n    setOldAmount(transaction.amount);\n    if (transaction?.amount < 0) {\n      setTransaction(() => {\n        setTransaction({ ...transaction, amount: transaction.amount * -1 });\n      });\n    } else {\n      setTransaction(transaction);\n    }\n    setShowModal(true);\n  };\n\n  const handleDeleteBtnClick = id => {\n    const data = transactions.find(item => item.id === id);\n    dispatch(deleteTransaction(data));\n  };\n\n  const onCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const onAddFormSubmit = data => {\n    const value = { ...data, oldAmount };\n    dispatch(updateTranscation(value));\n    setShowModal(false);\n  };\n  const transactionsCopy = [...transactions];\n\n  transactionsCopy.sort((a, b) => {\n    const dateA = new Date(a.transactionDate);\n    const dateB = new Date(b.transactionDate);\n    return dateB.getTime() - dateA.getTime();\n  });\n\n  const element =\n    transactionsCopy &&\n    transactionsCopy.map(({ id, transactionDate, type, categoryId, comment, amount }) => {\n      const categoryName = categories && categories.find(item => item.id === categoryId);\n      if (amount && amount < 0) {\n        amount = amount * -1;\n      }\n      return (\n        <TransactionsListItem\n          key={id}\n          id={id}\n          category={categoryName}\n          sum={amount}\n          date={transactionDate}\n          type={type}\n          comment={comment}\n          onEditBtnClick={handleEditBtnClick}\n          onDeleteBtnClick={handleDeleteBtnClick}\n        />\n      );\n    });\n\n  const whatToShow =\n    transactionsCopy.length === 0 ? (\n      <div className={styles.boxNotFound}>\n        <p className={styles.titleText}>No Transactions yet</p>\n        <p className={styles.textLover}>\n          Start transactions with your wallet.All transactions made will be displayed here.\n        </p>\n        <img src={wallet} alt=\"no transaction\" className={styles.img} />\n      </div>\n    ) : (\n      <div>\n        <div className={styles.title}>\n          <p>Date</p>\n          <p>Type</p>\n          <p>Category</p>\n          <p>Comment</p>\n          <p>Sum</p>\n        </div>\n        <SimpleBar style={{ maxHeight: 450 }}>\n          {' '}\n          <div className={styles.list_box}>\n            <ul className={styles.list}>{element}</ul>\n            {showModal && (\n              <Modal onClose={onCloseModal}>\n                <AddTransactionForm\n                  titleEdit=\"Edit transaction\"\n                  initialState={transaction}\n                  isEdit={isEdit}\n                  onSubmit={onAddFormSubmit}\n                  setShowModal={setShowModal}\n                />\n              </Modal>\n            )}\n          </div>\n        </SimpleBar>\n      </div>\n    );\n  return <> {whatToShow}</>;\n};\n\nexport default TransactionsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"TransactionsListMobileItem_box__vlaiC\",\"table\":\"TransactionsListMobileItem_table__htwQH\",\"tbody\":\"TransactionsListMobileItem_tbody__F5pGd\",\"body\":\"TransactionsListMobileItem_body__9HSOO\",\"head\":\"TransactionsListMobileItem_head__F5jZr\",\"green\":\"TransactionsListMobileItem_green__zOM+Z\",\"red\":\"TransactionsListMobileItem_red__aXhID\",\"greenSum\":\"TransactionsListMobileItem_greenSum__LLgfR\",\"redSum\":\"TransactionsListMobileItem_redSum__Lbaj7\",\"edit\":\"TransactionsListMobileItem_edit__H4ItN\",\"editBox\":\"TransactionsListMobileItem_editBox__TIfdZ\"};","import PropTypes from 'prop-types';\nimport EditButton from 'shared/components/EditButton/EditButton';\nimport DeleteButton from 'shared/components/DeleteButton/DeleteButton';\n\nimport styles from './TransactionsListMobileItem.module.scss';\n\n\nconst TransactionsListMobileItem = ({ id, category, sum, date, type, comment, onEditBtnClick, onDeleteBtnClick }) => {\n  const newSum = sum.toFixed(2)\n  const Newdate = new Date(date);\nconst day = Newdate.getDate().toString().padStart(2, '0');\nconst month = (Newdate.getMonth() + 1).toString().padStart(2, '0');\nconst year = Newdate.getFullYear().toString().slice(-2);\nconst formattedDate = `${day}.${month}.${year}`;\n  const typeOfTrans = type === 'INCOME' ? '+' : '-';\n  return (\n    <div className={styles.box}>\n      <table className={styles.table}>\n        <tbody className={styles.tbody}>\n          <tr className={typeOfTrans==='+'?styles.green:styles.red}>\n            <td className={styles.head}>Date</td>\n            <td className={styles.body}>{formattedDate}</td>\n          </tr>\n          <tr className={typeOfTrans==='+'?styles.green:styles.red}>\n            <td className={styles.head}>Type</td>\n            <td className={styles.body}>{typeOfTrans}</td>\n          </tr>\n          <tr className={typeOfTrans==='+'?styles.green:styles.red}>\n            <td className={styles.head}>Category</td>\n            <td className={styles.body}>{category?.name?category.name:'unknown'}</td>\n          </tr>\n          <tr className={typeOfTrans==='+'?styles.green:styles.red}>\n            <td className={styles.head}>Comment</td>\n            <td className={styles.body}>{comment}</td>\n          </tr>\n          <tr className={typeOfTrans==='+'?styles.green:styles.red}>\n            <td className={styles.head}>Sum</td>\n            <td className={typeOfTrans==='+'?styles.greenSum:styles.redSum}>{newSum}</td>\n          </tr>\n\n          <tr className={typeOfTrans==='+'?styles.green:styles.red}>\n            <td className={styles.head}>\n                 <DeleteButton onClick={() => onDeleteBtnClick(id)} />\n            </td>\n            <td className={styles.body}>\n              <div className={styles.editBox}>\n                <EditButton onClick={() => onEditBtnClick(id)} />\n                {/* <span onClick={() => onEditBtnClick(id)} className={styles.edit}>Edit</span> */}\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default TransactionsListMobileItem;\n\nTransactionsListMobileItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  category: PropTypes.object.isRequired,\n  sum: PropTypes.number.isRequired,\n  date: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  comment: PropTypes.string.isRequired,\n  onEditBtnClick: PropTypes.func.isRequired,\n  onDeleteBtnClick: PropTypes.func.isRequired,\n}","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteTransaction, updateTranscation } from 'redux/transaction/transaction-operations';\nimport { selectAllTransactions, selectCategories } from 'redux/transaction/transaction-selectors';\nimport Modal from 'shared/components/Modal/Modal';\nimport AddTransactionForm from 'components/AddTransactionForm/AddTransactionForm';\n\n// import styles from './TransactionsListMobile.module.scss';\nimport TransactionsListMobileItem from './TransactionsListMobileItem/TransactionsListMobileItem';\n\nconst TransactionListMobile = () => {\n  const [isEdit, setIsEdit] = useState(false);\n  const [transaction, setTransaction] = useState('');\n  const [showModal, setShowModal] = useState(false);\n\n  const dispatch = useDispatch();\n  const transactions = useSelector(selectAllTransactions);\n  const categories = useSelector(selectCategories);\n\n  const handleEditBtnClick = id => {\n    setIsEdit(true);\n    const transaction = transactions.find(item => item.id === id);\n    setTransaction(transaction);\n    setShowModal(true);\n  };\n\n  const handleDeleteBtnClick = id => {\n    dispatch(deleteTransaction(id));\n  };\n\n  const onCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const onAddFormSubmit = data => {\n    dispatch(updateTranscation(data));\n    setShowModal(false);\n  };\n\n  const transactionsCopy = [...transactions];\n\n  transactionsCopy.sort((a, b) => {\n    const dateA = new Date(a.transactionDate);\n    const dateB = new Date(b.transactionDate);\n    return dateB.getTime() - dateA.getTime();\n  });\n\n  const element = transactionsCopy.map(({ id, transactionDate, type, categoryId, comment, amount }) => {\n  const categoryName = categories.find(item => item.id === categoryId);\n\n    return (\n      <TransactionsListMobileItem\n        key={id}\n        id={id}\n        category={categoryName}\n        sum={amount}\n        date={transactionDate}\n        type={type}\n        comment={comment}\n        onEditBtnClick={handleEditBtnClick}\n        onDeleteBtnClick={handleDeleteBtnClick}\n      />\n    );\n  });\n\n  return (\n    <>\n      {' '}\n      {element}\n      {showModal && (\n        <Modal onClose={onCloseModal}>\n          <AddTransactionForm\n            initialState={transaction}\n            isEdit={isEdit}\n            onSubmit={onAddFormSubmit}\n            setShowModal={setShowModal}\n          />\n        </Modal>\n      )}{' '}\n    </>\n  );\n};\nexport default TransactionListMobile;\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addTransaction, getAllCategories, getAllTransactions } from 'redux/transaction/transaction-operations';\nimport AddButton from 'shared/components/AddButton/AddButton';\nimport Modal from 'shared/components/Modal/Modal';\nimport AddTransactionForm from 'components/AddTransactionForm/AddTransactionForm';\nimport css from './home-page.module.scss';\nimport TransactionsList from 'components/TransactionsList/TransactionsList';\nimport TransactionListMobile from 'components/TransactionsListMobile/TransactionsListMobile';\nimport useMediaQuery from 'shared/hooks/useMediaQuery';\nimport Balance from 'components/PageLayout/SideBar/Balance/Balance';\n\nconst HomePage = () => {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllCategories());\n    dispatch(getAllTransactions());\n  }, [dispatch]);\n\n  const handleAddBtnClick = () => {\n    setShowModal(true);\n  };\n\n  const onCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const onAddFormSubmit = data => {\n    dispatch(addTransaction(data));\n    setShowModal(false);\n  };\n\n  const isTablet = useMediaQuery('(min-width: 768px)');\n  const isMobile = useMediaQuery('(max-width: 767px)');\n\n  return (\n    <div className={css.wrapper}>\n      {isMobile && <Balance />}\n\n      {isTablet && <TransactionsList setShowModal={setShowModal} />}\n      {isMobile && <TransactionListMobile />}\n      <AddButton type=\"button\" onBtnClick={handleAddBtnClick} />\n      {showModal && (\n        <Modal onClose={onCloseModal}>\n          <AddTransactionForm onSubmit={onAddFormSubmit} setShowModal={setShowModal} />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default HomePage;\n","import PropTypes from 'prop-types';\nimport { components } from 'react-select';\n\nconst DropdownIndicator = props => {\n  return (\n    <components.DropdownIndicator {...props}>\n      <svg width=\"20\" height=\"11\" viewBox=\"0 0 20 11\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M1 1L10 10L19 1\" stroke=\"black\" />\n      </svg>\n    </components.DropdownIndicator>\n  );\n};\n\nexport default DropdownIndicator;\n\nDropdownIndicator.propTypes = {\n  props: PropTypes.object,\n}","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"primary-button_button__YlxDi\"};","import PropTypes from 'prop-types';\nimport styles from './primary-button.module.scss';\n\nconst PrimaryButton = ({ children, ...props }) => {\n  return (\n    <button className={styles.button} {...props}>\n      {children}\n    </button>\n  );\n};\n\nexport default PrimaryButton;\n\nPrimaryButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  props: PropTypes.object,\n}\n\n// Приклад використання\n// const handleClick = () => {\n//   console.log('Click');\n// };\n\n// return (\n//   <div className=\"container\">\n//     <PrimaryButton onClick={handleClick}>ADD</PrimaryButton>\n//   </div>\n// );\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    setState(prevState => {\n      const { name, value, checked, type } = target;\n      const newValue = type === 'checkbox' ? checked : value;\n\n      return { ...prevState, [name]: newValue };\n    });\n  };\n\n  const handleDataChange = ({ type, data }) => {\n    if (type === 'date') {\n      setState(prevState => {\n        return { ...prevState, transactionDate: data };\n      });\n    }\n    if (type === 'type') {\n      setState(prevState => {\n        return { ...prevState, type: data };\n      });\n    }\n    if (type === 'category') {\n      setState(prevState => {\n        return { ...prevState, categoryId: data };\n      });\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleDataChange, handleSubmit };\n};\n\nexport default useForm;\n\nuseForm.propTypes = {\n  initialState: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n"],"names":["onBtnClick","props","className","styles","onClick","getChecked","useState","checked","setChecked","labelClasses","type","onChange","data","prevState","options","value","setValue","components","DropdownIndicator","placeholder","baseStyles","fontFamily","color","fontSize","lineHeight","control","width","height","border","borderBottom","cursor","backgroundColor","boxShadow","indicatorSeparator","display","dropdownIndicator","state","transform","isFocused","transition","singleValue","menu","base","margin","padding","backdropFilter","borderRadius","overflow","option","_","paddingTop","paddingBottom","paddingLeft","alignItems","isSelected","menuList","toDateString","today","date","getDate","toString","padStart","month","getMonth","year","getFullYear","stateDate","Date","startDate","setStartDate","CustomInput","forwardRef","ref","src","calendarIcon","alt","showIcon","selected","customInput","dateFormat","maxDate","addDays","children","transactionDate","categoryId","comment","amount","initialState","INITIAL_STATE","isEdit","onSubmit","setShowModal","titleEdit","useForm","handleChange","handleDataChange","handleSubmit","filteredCategories","useSelector","selectCategories","filter","item","name","map","id","label","categoryName","find","income","expense","disabled","required","PrimaryButton","e","category","sum","onEditBtnClick","onDeleteBtnClick","newSum","toFixed","typeOfTrans","Newdate","day","slice","formattedDate","setIsEdit","transaction","setTransaction","oldAmount","setOldAmount","showModal","dispatch","useDispatch","transactions","selectAllTransactions","categories","handleEditBtnClick","handleDeleteBtnClick","deleteTransaction","transactionsCopy","sort","a","b","dateA","getTime","element","whatToShow","length","wallet","style","maxHeight","Modal","onClose","updateTranscation","useEffect","getAllCategories","getAllTransactions","isTablet","useMediaQuery","isMobile","css","Balance","addTransaction","c","viewBox","fill","xmlns","d","stroke","setState","target","newValue","preventDefault","propTypes","PropTypes"],"sourceRoot":""}